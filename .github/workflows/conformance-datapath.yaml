name: Cilium Datapath (ci-datapath-test)

# Any change in triggers needs to be reflected in the concurrency group.
on:
  push:
    branches:
      - pr/aanm-test-test-test

# By specifying the access of one of the scopes, all of those that are not
# specified are set to 'none'.
permissions:
  # To be able to access the repository with actions/checkout
  contents: read
  # To allow retrieving information from the PR API
  pull-requests: read
  # So that Sibz/github-status-action can write into the status API
  statuses: write

concurrency:
  # Structure:
  # - Workflow name
  # - Event type
  # - A unique identifier depending on event type:
  #   - schedule: SHA
  #   - issue_comment: PR number
  #   - pull_request: PR number
  #
  # This structure ensures a unique concurrency group name is generated for each
  # type of testing:
  # - schedule: {name} schedule {SHA}
  # - issue_comment: {name} issue_comment {PR number}
  # - pull_request: {name} pull_request {PR number}
  #
  # Note: for `issue_comment` triggers, we additionally need to filter out based
  # on comment content, otherwise any comment will interrupt workflow runs.
  group: |
    ${{ github.workflow }}
    ${{ github.event_name }}
    ${{
      (github.event_name == 'schedule' && github.sha) ||
      (github.event_name == 'issue_comment' && (
        github.event.comment.body == '/ci-datapath' ||
        github.event.comment.body == '/test'
      ) && github.event.issue.number) ||
      (github.event_name == 'pull_request' && github.event.pull_request.number)
    }}
  cancel-in-progress: true

env:
  check_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  setup-and-test:
    runs-on: ubuntu-latest-4cores-16gb
    name: Setup & Test
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        include:
          # See https://github.com/cilium/cilium/issues/20606 for configuration table
#
#          - name: '1'
#            kernel: '4.19-main'
#            kube-proxy: 'iptables'
#            kpr: 'disabled'
#            tunnel: 'vxlan'
#
#          - name: '2'
#            kernel: '5.4-main'
#            kube-proxy: 'iptables'
#            kpr: 'disabled'
#            tunnel: 'disabled'
#
#          - name: '3'
#            kernel: '5.10-main'
#            kube-proxy: 'iptables'
#            kpr: 'disabled'
#            tunnel: 'disabled'
#            endpoint-routes: 'true'
#
#          - name: '4'
#            kernel: '5.10-main'
#            kube-proxy: 'iptables'
#            kpr: 'strict'
#            tunnel: 'vxlan'
#            lb-mode: 'snat'
#            endpoint-routes: 'true'
#            egress-gateway: 'true'
#
#          - name: '5'
#            kernel: '5.15-main'
#            kube-proxy: 'iptables'
#            kpr: 'strict'
#            tunnel: 'disabled'
#            lb-mode: 'dsr'
#            endpoint-routes: 'true'
#            egress-gateway: 'true'
#
#          - name: '6'
#            kernel: '6.0-main'
#            kube-proxy: 'none'
#            kpr: 'strict'
#            tunnel: 'vxlan'
#            lb-mode: 'snat'
#            egress-gateway: 'true'

          - name: '7'
            kernel: 'bpf-next-main'
            kube-proxy: 'none'
            kpr: 'strict'
            tunnel: 'disabled'
            lb-mode: 'snat'
            egress-gateway: 'true'

#          - name: '8'
#            kernel: 'bpf-next-main'
#            kube-proxy: 'iptables'
#            kpr: 'disabled'
#            tunnel: 'geneve'
#            endpoint-routes: 'true'
#
#          - name: '9'
#            kernel: '4.19-main'
#            kube-proxy: 'iptables'
#            kpr: 'disabled'
#            tunnel: 'vxlan'
#            encryption: 'ipsec'
#            encryption-node: 'false'
#            ipv6: 'false' # until https://github.com/cilium/cilium/issues/23461 has been fixed
#
#          - name: '10'
#            kernel: '5.4-main'
#            kube-proxy: 'iptables'
#            kpr: 'disabled'
#            tunnel: 'disabled'
#            encryption: 'ipsec'
#            encryption-node: 'false'
#
#          - name: '11'
#            kernel: '5.10-main'
#            kube-proxy: 'iptables'
#            kpr: 'disabled'
#            tunnel: 'disabled'
#            encryption: 'ipsec'
#            encryption-node: 'false'
#            endpoint-routes: 'true'
#
#          - name: '12'
#            kernel: '5.10-main'
#            kube-proxy: 'iptables'
#            kpr: 'strict'
#            tunnel: 'vxlan'
#            encryption: 'wireguard'
#            encryption-node: 'false'
#            lb-mode: 'snat'
#            endpoint-routes: 'true'
#            egress-gateway: 'true'
#
#          - name: '13'
#            kernel: '5.15-main'
#            kube-proxy: 'iptables'
#            kpr: 'strict'
#            tunnel: 'disabled'
#            encryption: 'wireguard'
#            encryption-node: 'false'
#            lb-mode: 'snat' # https://github.com/cilium/cilium/issues/23328
#            endpoint-routes: 'true'
#            egress-gateway: 'true'
#
#          - name: '14'
#            kernel: '6.0-main'
#            kube-proxy: 'none'
#            kpr: 'strict'
#            tunnel: 'vxlan'
#            encryption: 'wireguard'
#            encryption-node: 'true'
#            lb-mode: 'snat' # https://github.com/cilium/cilium/issues/23328
#            egress-gateway: 'true'
#
#          - name: '15'
#            kernel: 'bpf-next-main'
#            kube-proxy: 'none'
#            kpr: 'strict'
#            tunnel: 'disabled'
#            encryption: 'wireguard'
#            encryption-node: 'true'
#            lb-mode: 'snat'
#            egress-gateway: 'true'
#
#          - name: '16'
#            kernel: 'bpf-next-main'
#            kube-proxy: 'iptables'
#            kpr: 'disabled'
#            tunnel: 'geneve'
#            encryption: 'ipsec'
#            encryption-node: 'false'
#            endpoint-routes: 'true'

    timeout-minutes: 60
    steps:
      - name: Set up job variables
        id: vars
        run: |
          if [ ${{ github.event.issue.pull_request || github.event.pull_request }} ]; then
            PR_API_JSON=$(curl \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              ${{ github.event.issue.pull_request.url || github.event.pull_request.url }})
            SHA=$(echo "$PR_API_JSON" | jq -r ".head.sha")
          else
            SHA=${{ github.sha }}
          fi

          echo "sha=f5c202d70f815aa5873374f50debca476ab2fb04" >> $GITHUB_OUTPUT

          CILIUM_INSTALL_DEFAULTS="--wait \
            --chart-directory=./install/kubernetes/cilium \
            --helm-set=image.repository=quay.io/${{ github.repository_owner }}/cilium-ci \
            --helm-set=image.useDigest=false \
            --helm-set=image.tag=${SHA} \
            --helm-set=operator.image.repository=quay.io/${{ github.repository_owner }}/operator \
            --helm-set=operator.image.suffix=-ci \
            --helm-set=operator.image.tag=${SHA} \
            --helm-set=operator.image.useDigest=false \
            --helm-set=hubble.relay.image.repository=quay.io/${{ github.repository_owner }}/hubble-relay-ci \
            --helm-set=hubble.relay.image.tag=${SHA} \
            --rollback=false \
            --config monitor-aggregation=none \
            --nodes-without-cilium=kind-worker3 \
            --helm-set-string=kubeProxyReplacement=${{ matrix.kpr }}"
          TUNNEL="--helm-set-string=tunnel=${{ matrix.tunnel }}"
          if [ "${{ matrix.tunnel }}" == "disabled" ]; then
            TUNNEL="--helm-set-string=tunnel=disabled --helm-set-string=autoDirectNodeRoutes=true --helm-set-string=ipv4NativeRoutingCIDR=10.244.0.0/16"
            TUNNEL="${TUNNEL} --helm-set-string=ipv6NativeRoutingCIDR=fd00:10:244::/56"
          fi
          LB_MODE=""
          if [ "${{ matrix.lb-mode }}" != "" ]; then
            LB_MODE="--helm-set-string=loadBalancer.mode=${{ matrix.lb-mode }}"
          fi
          ENDPOINT_ROUTES=""
          if [ "${{ matrix.endpoint-routes }}" == "true" ]; then
            ENDPOINT_ROUTES="--helm-set-string=endpointRoutes.enabled=true"
          fi
          IPV6=""
          if [ "${{ matrix.ipv6 }}" != "false" ]; then
            IPV6="--helm-set=ipv6.enabled=true"
          fi
          # We need to enable BPF masquerading for EGW so we keep the default
          # here. masq is off due to https://github.com/cilium/cilium/issues/23283
          EGRESS_GATEWAY="--helm-set=bpf.masquerade=false"
          if [ "${{ matrix.egress-gateway }}" == "true" ]; then
            EGRESS_GATEWAY="--helm-set=bpf.masquerade=true --helm-set=enableIPv6Masquerade=false"
            # Force legacy host routing to work around #23283 with masq on.
            EGRESS_GATEWAY+=" --helm-set=bpf.hostLegacyRouting=true"
            EGRESS_GATEWAY+=" --helm-set=egressGateway.enabled=true"
          fi

          ENCRYPT=""
          if [ "${{ matrix.encryption }}" != "" ]; then
            ENCRYPT="--encryption=${{ matrix.encryption }}"
            if [ "${{ matrix.encryption-node }}" != "" ]; then
              ENCRYPT+=" --node-encryption=${{ matrix.encryption-node }}"
            fi
          fi

          CONFIG="${CILIUM_INSTALL_DEFAULTS} ${TUNNEL} ${LB_MODE} ${ENDPOINT_ROUTES} ${IPV6} ${EGRESS_GATEWAY} ${ENCRYPT}"
          echo "cilium_install_defaults=${CONFIG}" >> $GITHUB_OUTPUT

      - name: Checkout pull request for Helm chart
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          ref: ${{ steps.vars.outputs.sha }}
          persist-credentials: false

      - name: Provision LVH VMs
        uses: cilium/little-vm-helper@0b7d7157dae56a44dc531c852e7756dc671071af # v0.0.3
        with:
          test-name: datapath-conformance
          image-version: ${{ matrix.kernel }}
          host-mount: ./
          cpu: 2
          dns-resolver: '1.1.1.1'
          install-dependencies: 'true'
          cmd: |
            git config --global --add safe.directory /host

      - name: Wait for images to be available
        timeout-minutes: 10
        shell: bash
        run: |
          for image in cilium-ci operator-generic-ci hubble-relay-ci ; do
            until docker manifest inspect quay.io/${{ github.repository_owner }}/$image:${{ steps.vars.outputs.sha }} &> /dev/null; do sleep 45s; done
          done

      - name: Run tests
        uses: cilium/little-vm-helper@0b7d7157dae56a44dc531c852e7756dc671071af # v0.0.3
        with:
          provision: 'false'
          cmd: |
            cd /host/
            ./contrib/scripts/kind.sh "" 3 "" "" "${{ matrix.kube-proxy }}" "dual"
            K8S_VERSION=1.25 ginkgo --focus=K8s -- -cilium.provision=false \
            --cilium.image=quay.io/${{ github.repository_owner }}/cilium-ci \
            -cilium.tag=${SHA}  \
            --cilium.operator-image=quay.io/${{ github.repository_owner }}/operator \
            -cilium.operator-tag=${SHA} \
            -cilium.kubeconfig=`echo ~/.kube/config` \
            -cilium.provision-k8s=false  \
            -cilium.testScope=K8s \
            -cilium.operator-suffix=-ci

      - name: Fetch artifacts
        if: ${{ !success() }}
        uses: cilium/little-vm-helper@0b7d7157dae56a44dc531c852e7756dc671071af # v0.0.3
        with:
          provision: 'false'
          cmd: |
            cd /host
            kubectl get pods --all-namespaces -o wide
            ./cilium-cli status
            mkdir -p cilium-sysdumps
            ./cilium-cli sysdump --output-filename cilium-sysdump-${{ matrix.name }}-final

      - name: Upload artifacts
        if: ${{ !success() }}
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: cilium-sysdumps
          path: cilium-sysdump-*.zip
          retention-days: 5

